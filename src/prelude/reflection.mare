:class val ReflectionOfType(A)
  :: The string used in compiler messages to represent the type with capability.
  :: If the capability is the same as the default for that type, it will be
  :: omitted for brevity. Type arguments will also be included if present.
  ::
  :: $ (reflection_of_type "example").string
  :: > "String"
  :: $ (reflection_of_type String.new).string
  :: > "String'ref"
  :: $ (reflection_of_type Array(U8).new).string
  :: > "Array(U8)"
  :prop string String: ""

  :prop features Array(ReflectionFeatureOfType(A)): []

:class val ReflectionFeatureOfType(A)
  :prop name String: ""
  :prop tags Array(String): []
  :prop mutator (ReflectionMutatorOfType(A) | None): None

  :fun maybe_call_mutator(a A) Bool
    mutator = @mutator // TODO: somehow avoid typecheck-aiding temporary variable
    if (mutator <: ReflectionMutatorOfType(A)) (
      mutator.call(--a)
      True
    |
      False
    )

:trait non ReflectionMutatorOfType(A)
  :fun non call(a A) None
